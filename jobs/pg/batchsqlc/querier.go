// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package batchsqlc

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	BulkInsertIntoBatchRows(ctx context.Context, arg BulkInsertIntoBatchRowsParams) (int64, error)
	CountBatchRowsByBatchIDAndStatus(ctx context.Context, arg CountBatchRowsByBatchIDAndStatusParams) (int64, error)
	FetchBatchRowsForBatchDone(ctx context.Context, batch uuid.UUID) ([]FetchBatchRowsForBatchDoneRow, error)
	FetchBlockOfRows(ctx context.Context, arg FetchBlockOfRowsParams) ([]FetchBlockOfRowsRow, error)
	GetBatchByID(ctx context.Context, id uuid.UUID) (Batch, error)
	GetBatchRowsByBatchID(ctx context.Context, batch uuid.UUID) ([]Batchrow, error)
	GetBatchRowsByBatchIDSorted(ctx context.Context, batch uuid.UUID) ([]GetBatchRowsByBatchIDSortedRow, error)
	GetBatchRowsCount(ctx context.Context, batch uuid.UUID) (int64, error)
	GetBatchStatus(ctx context.Context, id uuid.UUID) (StatusEnum, error)
	GetBatchStatusAndOutputFiles(ctx context.Context, id uuid.UUID) (GetBatchStatusAndOutputFilesRow, error)
	GetCompletedBatches(ctx context.Context) ([]uuid.UUID, error)
	GetPendingBatchRows(ctx context.Context, batch uuid.UUID) ([]GetPendingBatchRowsRow, error)
	GetProcessedBatchRowsByBatchIDSorted(ctx context.Context, batch uuid.UUID) ([]GetProcessedBatchRowsByBatchIDSortedRow, error)
	InsertBatchFile(ctx context.Context, arg InsertBatchFileParams) error
	InsertIntoBatchRows(ctx context.Context, arg InsertIntoBatchRowsParams) error
	InsertIntoBatches(ctx context.Context, arg InsertIntoBatchesParams) (uuid.UUID, error)
	UpdateBatchCounters(ctx context.Context, arg UpdateBatchCountersParams) error
	UpdateBatchOutputFiles(ctx context.Context, arg UpdateBatchOutputFilesParams) error
	UpdateBatchResult(ctx context.Context, arg UpdateBatchResultParams) error
	UpdateBatchRowStatus(ctx context.Context, arg UpdateBatchRowStatusParams) error
	UpdateBatchRowsBatchJob(ctx context.Context, arg UpdateBatchRowsBatchJobParams) error
	UpdateBatchRowsByBatchAndStatus(ctx context.Context, arg UpdateBatchRowsByBatchAndStatusParams) error
	UpdateBatchRowsByBatchApp(ctx context.Context, arg UpdateBatchRowsByBatchAppParams) error
	UpdateBatchRowsByBatchAppOp(ctx context.Context, arg UpdateBatchRowsByBatchAppOpParams) error
	UpdateBatchRowsSlowQuery(ctx context.Context, arg UpdateBatchRowsSlowQueryParams) error
	UpdateBatchRowsStatus(ctx context.Context, arg UpdateBatchRowsStatusParams) error
	// Bulk update batchrow statuses for multiple rows at once.
	// This significantly improves performance when processing multiple rows
	// by reducing database round trips from N queries to 1 query.
	UpdateBatchRowsStatusBulk(ctx context.Context, arg UpdateBatchRowsStatusBulkParams) error
	UpdateBatchStatus(ctx context.Context, arg UpdateBatchStatusParams) error
	UpdateBatchSummary(ctx context.Context, arg UpdateBatchSummaryParams) error
	UpdateBatchSummaryOnAbort(ctx context.Context, arg UpdateBatchSummaryOnAbortParams) error
	// Bulk update batch statuses for multiple batches at once.
	// This is used during job processing to efficiently mark all relevant batches
	// as 'inprog' in a single query instead of updating each one individually.
	// Only updates batches that are currently 'queued' to prevent unnecessary updates.
	UpdateBatchesStatusBulk(ctx context.Context, arg UpdateBatchesStatusBulkParams) error
}

var _ Querier = (*Queries)(nil)
